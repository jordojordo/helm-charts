frontend: "https://example.com" # Required for CORS
nodeName: ""

replicaCount: 1

image:
  repository: "ghcr.io/jordojordo/daphine"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

strategy:
  # type: RollingUpdate
  # rollingUpdate:
  #   maxUnavailable: 1
  #   maxSurge: 2

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 100Mi
  # requests:
  #   cpu: 100m
  #   memory: 50Mi

livenessProbe:
  httpGet:
    path: "/health"
    port: http
readinessProbe:
  httpGet:
    path: "/ready"
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

storage:
  useExisting:
    pv: false
    pvName: ""  # Specify if useExisting.pv is true
    pvc: false
    pvcName: ""  # Specify if useExisting.pvc is true
  pv:
    type: "local" # Default to local. Set to 'nfs' for NFS.
    local:
      spec:
        storage: ""
        storageClassName: ""
        volumeMode: Filesystem
        reclaimPolicy: Retain
        accessModes:
          - ReadWriteOnce
        hostPath: "/mnt/assets"
        nodeAffinity:
          required:
            nodeSelectorTerms: []
              # - matchExpressions:
              #     - key: "kubernetes.io/hostname"
              #       operator: In
              #       values:
              #         - local-node
    nfs:
      spec:
        storage: ""
        storageClassName: 'nfs-storage'
        accessModes:
          - ReadWriteOnce
        nfs:
          server: nfs-server.example.com
          path: "/path/to/nfs"
          readOnly: false
  pvc:
    spec:
      storageRequest: ""
      storageClassName: ""
      accessModes:
        - ReadWriteOnce
