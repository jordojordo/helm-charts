{{- if not .Values.storage.useExisting.pv }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ if eq .Values.storage.pv.type "local" }}{{ .Values.storage.pv.local.spec.name }}{{ else }}{{ .Values.storage.pv.nfs.spec.name }}{{ end }}
  labels:
    type: {{.Values.storage.pv.type}}
{{- if eq .Values.storage.pv.type "local" }}
spec:
  capacity:
    storage: {{.Values.storage.pv.local.spec.storage}}
  volumeMode: {{.Values.storage.pv.local.spec.volumeMode}}
  accessModes: {{toYaml .Values.storage.pv.local.spec.accessModes | nindent 4}}
  persistentVolumeReclaimPolicy: {{.Values.storage.pv.local.spec.reclaimPolicy}}
  storageClassName: {{.Values.storage.pv.local.spec.storageClassName}}
  hostPath:
    path: {{.Values.storage.pv.local.spec.hostPath}}
  nodeAffinity:
    required:
      nodeSelectorTerms:
        {{- range .Values.storage.pv.local.spec.nodeAffinity.required.nodeSelectorTerms }}
        - matchExpressions:
          {{- range .matchExpressions }}
          - key: {{ .key }}
            operator: {{ .operator }}
            values:
              {{- range .values }}
              - {{ . }}
              {{- end }}
          {{- end }}
        {{- end }}
{{- else if eq .Values.storage.pv.type "nfs" }}
spec:
  capacity:
    storage: {{ .Values.storage.pv.nfs.spec.storage }}
  accessModes: {{toYaml .Values.storage.pv.nfs.spec.accessModes | nindent 4}}
  storageClassName: {{ .Values.storage.pv.nfs.spec.storageClassName }}
  nfs:
    readOnly: {{ .Values.storage.pv.nfs.spec.nfs.readOnly }}
    server: {{ .Values.storage.pv.nfs.spec.nfs.server }}
    path: {{ .Values.storage.pv.nfs.spec.nfs.path }}
{{- end }}
{{- end }}