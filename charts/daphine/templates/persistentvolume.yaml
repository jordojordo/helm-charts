{{- if and (eq .Values.storage.pv.type "local") (not .Values.storage.useExistingPV) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{.Values.storage.pv.local.name}}
  labels:
    type: {{.Values.storage.pv.type}}
spec:
  capacity:
    storage: {{.Values.storage.pv.local.storage}}
  volumeMode: {{.Values.storage.pv.local.volumeMode}}
  accessModes: {{toYaml .Values.storage.pv.local.accessModes | nindent 4}}
  persistentVolumeReclaimPolicy: {{.Values.storage.pv.local.reclaimPolicy}}
  storageClassName: {{.Values.storage.pv.local.storageClassName}}
  hostPath:
    path: {{.Values.storage.pv.local.hostPath}}
  nodeAffinity:
    required:
      nodeSelectorTerms:
        {{- range .Values.storage.pv.local.nodeAffinity.required.nodeSelectorTerms }}
        - matchExpressions:
          {{- range .matchExpressions }}
          - key: {{ .key }}
            operator: {{ .operator }}
            values:
              {{- range .values }}
              - {{ . }}
              {{- end }}
          {{- end }}
        {{- end }}
{{- else if and (eq .Values.storage.pv.type "nfs") (not .Values.storage.useExistingPV) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.storage.pv.nfs.name }}
  labels:
    type: {{.Values.storage.pv.type}}
spec:
  capacity:
    storage: {{ .Values.storage.pv.nfs.storage }}
  accessModes: {{toYaml .Values.storage.pv.nfs.accessModes | nindent 4}}
  storageClassName: {{ .Values.storage.pv.nfs.storageClassName }}
  nfs:
    readOnly: {{ .Values.storage.pv.nfs.readOnly }}
    server: {{ .Values.storage.pv.nfs.server }}
    path: {{ .Values.storage.pv.nfs.path }}
{{- end }}